"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var mkdirp = require("mkdirp");
var glob = require("glob");
var fs = require("fs");
var PATH = require("path");
var compiler_factory_1 = require("./compiler.factory");
/**
 * Get all files in dir matching patterns
 */
function readDir(dir, patterns) {
    return patterns.reduce(function (results, pattern) {
        return glob.sync(PATH.join(dir, pattern))
            .filter(function (path) { return fs.statSync(path).isFile(); })
            .concat(results);
    }, []);
}
exports.readDir = readDir;
function save(collection, lang, format, output) {
    var compiler = compiler_factory_1.CompilerFactory.create(format, {});
    var normalizedOutput = normalizePath(output, compiler.extension, lang);
    var dir = normalizedOutput;
    var filename = lang + "." + compiler.extension;
    if (!fs.existsSync(normalizedOutput) || !fs.statSync(normalizedOutput).isDirectory()) {
        dir = PATH.dirname(normalizedOutput);
        filename = PATH.basename(normalizedOutput);
    }
    var outputPath = PATH.join(dir, filename);
    collection = collection.sort();
    if (collection.count() > 0) {
        if (!fs.existsSync(dir)) {
            mkdirp.sync(dir);
        }
        fs.writeFileSync(outputPath, compiler.compile(collection));
    }
}
exports.save = save;
function normalizePath(output, extension, lang) {
    return PATH.resolve(output
        .replace('[lang]', lang)
        .replace('[ext]', extension));
}
exports.normalizePath = normalizePath;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFpQztBQUNqQywyQkFBNkI7QUFDN0IsdUJBQXlCO0FBQ3pCLDJCQUE2QjtBQUU3Qix1REFBcUQ7QUFHckQ7O0dBRUc7QUFDSCxpQkFBd0IsR0FBVyxFQUFFLFFBQWtCO0lBQ3JELE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQUMsT0FBTyxFQUFFLE9BQU87UUFDdEMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUM7YUFDdEMsTUFBTSxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBMUIsQ0FBMEIsQ0FBQzthQUMxQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDckIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1QsQ0FBQztBQU5ELDBCQU1DO0FBRUQsY0FBcUIsVUFBeUMsRUFBRSxJQUFZLEVBQUUsTUFBYyxFQUFFLE1BQWM7SUFDMUcsSUFBTSxRQUFRLEdBQXNCLGtDQUFlLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUV2RSxJQUFNLGdCQUFnQixHQUFHLGFBQWEsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN6RSxJQUFJLEdBQUcsR0FBVyxnQkFBZ0IsQ0FBQztJQUNuQyxJQUFJLFFBQVEsR0FBYyxJQUFJLFNBQUksUUFBUSxDQUFDLFNBQVcsQ0FBQztJQUN2RCxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckYsR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNyQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxJQUFNLFVBQVUsR0FBVyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNwRCxVQUFVLEdBQUcsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0lBRS9CLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNCLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDeEIsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixDQUFDO1FBQ0QsRUFBRSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7QUFDSCxDQUFDO0FBcEJELG9CQW9CQztBQUVELHVCQUE4QixNQUFjLEVBQUUsU0FBaUIsRUFBRSxJQUFZO0lBQzNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU07U0FDdkIsT0FBTyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUM7U0FDdkIsT0FBTyxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ2xDLENBQUM7QUFKRCxzQ0FJQyIsImZpbGUiOiJ1dGlscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG1rZGlycCBmcm9tICdta2RpcnAnO1xuaW1wb3J0ICogYXMgZ2xvYiBmcm9tICdnbG9iJztcbmltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJztcbmltcG9ydCAqIGFzIFBBVEggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBDb21waWxlckludGVyZmFjZSB9IGZyb20gJy4vYmllc2JqZXJnLW5neC10cmFuc2xhdGUtZXh0cmFjdCc7XG5pbXBvcnQgeyBDb21waWxlckZhY3RvcnkgfSBmcm9tICcuL2NvbXBpbGVyLmZhY3RvcnknO1xuaW1wb3J0IHsgRXh0ZW5kZWRUcmFuc2xhdGlvbkNvbGxlY3Rpb24gfSBmcm9tICcuL0V4dGVuZGVkVHJhbnNsYXRpb25Db2xsZWN0aW9uJztcblxuLyoqXG4gKiBHZXQgYWxsIGZpbGVzIGluIGRpciBtYXRjaGluZyBwYXR0ZXJuc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcmVhZERpcihkaXI6IHN0cmluZywgcGF0dGVybnM6IHN0cmluZ1tdKTogc3RyaW5nW10ge1xuICByZXR1cm4gcGF0dGVybnMucmVkdWNlKChyZXN1bHRzLCBwYXR0ZXJuKSA9PiB7XG4gICAgcmV0dXJuIGdsb2Iuc3luYyhQQVRILmpvaW4oZGlyLCBwYXR0ZXJuKSlcbiAgICAgIC5maWx0ZXIocGF0aCA9PiBmcy5zdGF0U3luYyhwYXRoKS5pc0ZpbGUoKSlcbiAgICAgIC5jb25jYXQocmVzdWx0cyk7XG4gIH0sIFtdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmUoY29sbGVjdGlvbjogRXh0ZW5kZWRUcmFuc2xhdGlvbkNvbGxlY3Rpb24sIGxhbmc6IHN0cmluZywgZm9ybWF0OiBzdHJpbmcsIG91dHB1dDogc3RyaW5nKSB7XG4gIGNvbnN0IGNvbXBpbGVyOiBDb21waWxlckludGVyZmFjZSA9IENvbXBpbGVyRmFjdG9yeS5jcmVhdGUoZm9ybWF0LCB7fSk7XG5cbiAgY29uc3Qgbm9ybWFsaXplZE91dHB1dCA9IG5vcm1hbGl6ZVBhdGgob3V0cHV0LCBjb21waWxlci5leHRlbnNpb24sIGxhbmcpO1xuICBsZXQgZGlyOiBzdHJpbmcgPSBub3JtYWxpemVkT3V0cHV0O1xuICBsZXQgZmlsZW5hbWU6IHN0cmluZyA9IGAke2xhbmd9LiR7Y29tcGlsZXIuZXh0ZW5zaW9ufWA7XG4gIGlmICghZnMuZXhpc3RzU3luYyhub3JtYWxpemVkT3V0cHV0KSB8fCAhZnMuc3RhdFN5bmMobm9ybWFsaXplZE91dHB1dCkuaXNEaXJlY3RvcnkoKSkge1xuICAgIGRpciA9IFBBVEguZGlybmFtZShub3JtYWxpemVkT3V0cHV0KTtcbiAgICBmaWxlbmFtZSA9IFBBVEguYmFzZW5hbWUobm9ybWFsaXplZE91dHB1dCk7XG4gIH1cblxuICBjb25zdCBvdXRwdXRQYXRoOiBzdHJpbmcgPSBQQVRILmpvaW4oZGlyLCBmaWxlbmFtZSk7XG4gIGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uLnNvcnQoKTtcblxuICBpZiAoY29sbGVjdGlvbi5jb3VudCgpID4gMCkge1xuICAgIGlmICghZnMuZXhpc3RzU3luYyhkaXIpKSB7XG4gICAgICBta2RpcnAuc3luYyhkaXIpO1xuICAgIH1cbiAgICBmcy53cml0ZUZpbGVTeW5jKG91dHB1dFBhdGgsIGNvbXBpbGVyLmNvbXBpbGUoY29sbGVjdGlvbikpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVQYXRoKG91dHB1dDogc3RyaW5nLCBleHRlbnNpb246IHN0cmluZywgbGFuZzogc3RyaW5nKSB7XG4gIHJldHVybiBQQVRILnJlc29sdmUob3V0cHV0XG4gICAgLnJlcGxhY2UoJ1tsYW5nXScsIGxhbmcpXG4gICAgLnJlcGxhY2UoJ1tleHRdJywgZXh0ZW5zaW9uKSk7XG59XG5cbiJdfQ==
